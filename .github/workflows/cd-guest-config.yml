name: cd-machine-config
on:
  push:
    branches: [main]
    paths:
      - "examples-machine-config"
  workflow_dispatch:

jobs:
  cd-machine-config:
    env:
      TF_IN_AUTOMATION: true
      TF_INPUT: false
      TF_CLI_ARGS_apply: "-auto-approve -parallelism=30"
      TF_CLI_ARGS_destroy: "-auto-approve -parallelism=30"
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ~1.3.0

      - shell: bash
        run: |
          wget https://github.com/Microsoft/omi/releases/download/v1.1.0-0/omi-1.1.0.ssl_100.x64.deb
          wget https://github.com/Microsoft/PowerShell-DSC-for-Linux/releases/download/v1.1.1-294/dsc-1.1.1-294.ssl_100.x64.deb
          sudo dpkg -i omi-1.1.0.ssl_100.x64.deb dsc-1.1.1-294.ssl_100.x64.deb

      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Terraform Init
        id: init
        run: terraform init -no-color
        working-directory: examples-machine-config

      - name: Terraform Build Machine Configs
        id: build
        if: ${{ success() }}
        run: terraform apply -target null_resource.build_machine_config_packages -parallelism=1
        working-directory: examples-machine-config

      - name: Terraform Apply
        id: apply
        if: ${{ success() }}
        run: terraform apply
        working-directory: examples-machine-config

      - name: Terraform Destroy
        id: destroy
        if: ${{ success() }}
        run: terraform destroy
        working-directory: examples-machine-config
